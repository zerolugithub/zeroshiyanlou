Code/0040775001161000116100000000000013366222143010150 5ustar0000000000000000Code/contests.json0100664001161000116100000000260013237730067012706 0ustar0000000000000000[
{
"user_id": 1,
"challenge_id": 2,
"score": 10,
"submit_time": 100
}
,
{
"user_id": 2,
"challenge_id": 2,
"score": 10,
"submit_time": 112
}
,
{
"user_id": 3,
"challenge_id": 2,
"score": 10,
"submit_time": 27
}
,
{
"user_id": 1,
"challenge_id": 1,
"score": 20,
"submit_time": 90
}
,
{
"user_id": 5,
"challenge_id": 2,
"score": 10,
"submit_time": 76
}
,
{
"user_id": 4,
"challenge_id": 3,
"score": 50,
"submit_time": 170
}
,
{
"user_id": 2,
"challenge_id": 3,
"score": 50,
"submit_time": 90
}
,
{
"user_id": 3,
"challenge_id": 1,
"score": 10,
"submit_time": 70
}
,
{
"user_id": 4,
"challenge_id": 2,
"score": 10,
"submit_time": 17
}
,
{
"user_id": 5,
"challenge_id": 3,
"score": 10,
"submit_time": 20
}
,
{
"user_id": 6,
"challenge_id": 1,
"score": 10,
"submit_time": 30
}
,
{
"user_id": 2,
"challenge_id": 1,
"score": 10,
"submit_time": 100
}
,
{
"user_id": 3,
"challenge_id": 3,
"score": 20,
"submit_time": 60
}
,
{
"user_id": 8,
"challenge_id": 3,
"score": 50,
"submit_time": 80
}
,
{
"user_id": 6,
"challenge_id": 2,
"score": 10,
"submit_time": 100
}
,
{
"user_id": 9,
"challenge_id": 1,
"score": 20,
"submit_time": 171
}
,
{
"user_id": 7,
"challenge_id": 2,
"score": 10,
"submit_time": 90
}
,
{
"user_id": 5,
"challenge_id": 1,
"score": 10,
"submit_time": 78
}
,
{
"user_id": 8,
"challenge_id": 2,
"score": 10,
"submit_time": 87
}
,
{
"user_id": 1,
"challenge_id": 3,
"score": 20,
"submit_time": 31
}
]
Code/getrank.py0100664001161000116100000000073113366222143012153 0ustar0000000000000000#!/usr/bin/env python3

import sys
from pymongo import MongoClient


#!/usr/bin/env python3

import sys
from pymongo import MongoClient

def get_rank(user_id):
    client = MongoClient()
    db = client.shiyanlou
    contests = db.contests

    pipeline2 = [{'$group':{'_id':'$user_id','score':{'$sum':"$score"},
                   "submit_time":{"$sum":"$submit_time"}}},
                 {'$sort' :{'score': -1,"submit_time":1}}]
    getRank = db.contests.aggregate(pipeline2)
    rankDict = {}
    rank = 1
    for i in getRank:
        rankDict[i["_id"]] = (rank,i["score"],i["submit_time"])
        rank += 1
    result = rankDict.get(user_id,"NOTFOUND")
    return result
if __name__ == "__main__":
    #bug
    if len(sys.argv) != 2:
        print("Parameter Error")
        sys.exit()
    try:
        user_id = int(sys.argv[1])
    except ValueError:
        print("Parameter Error")
        sys.exit()
    userdata = get_rank(user_id)
    print(userdata)


